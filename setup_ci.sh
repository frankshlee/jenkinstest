#!/bin/bash
set -x

GROOVY_HOME="/usr/share/groovy"
JAVA_HOME="/usr/lib/jvm/java-6-openjdk"
# Make Jenkins listen on this port. Default is 8080, which clashes with HAProxy.
JENKINS_PORT=8880


# 2012/08/07 Frank Lee
# This assumes that this script will be run on
# a freshly installed Debian 6 install.


function exitok() {
	status=$1
	job=$2
	if [ $status -ne 0 ]; then
		echo "Exiting from $2.  Errored with $status."
		exit $1
	else
		echo "Job: $2 is ok with status $1. Continuing."
	fi
}

# File generated by update-locale
# Fix locale /etc/default/locale
if [ -f /etc/default/locale ]; then
	mv /etc/default/locale /etc/default/locale.backup.`date +%Y%m%d%H%M%S`
	exitok $? _______________created_locale__________________
fi

cat > /tmp/locale <<EOF
LANG="en_US.UTF-8"
LANGUAGE="en_US:en"
LC_ALL="en_US.UTF-8"
LC_CTYPE="en_US.UTF-8"
EOF
exitok $? _____________________created_locale__________________

mv /tmp/locale /etc/default/locale
. /etc/default/locale
exitok $? _____________________loaded_locale_____________________
ls -l /etc/default/locale

cd ~/

# install Jenkins and java stuff for java testing.
grep pkg.jenkins-ci.org /etc/apt/sources.list
already_there=`echo $?`
if [ $already_there -ne 0 ]; then
  wget -q -O - http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key | apt-key add -
  exitok $? _____________________added_jenkins_key_to_apt_________o
  echo "deb http://pkg.jenkins-ci.org/debian binary/" | tee -a /etc/apt/sources.list
  apt-get update
fi

# ensure that these packages are installed:
apt-get update
apt-get -y install openjdk-6-jre openjdk-6-jdk ant maven2 clamav git curl
exitok $? ____________installed_openjdk-6_sdk_jre_ant_maven2_clamav_git____________

# install jenkins
#if [ ! -f /usr/share/jenkins/jenkins.war ]; then
if [ ! -d /usr/share/jenkins ]; then
  mkdir /usr/share/jenkins
  apt-get -y install jenkins
fi

cd /usr/share/jenkins
# Added "--no-check-certificate" because of the below error:
#ERROR: certificate common name "jenkins-ci.org" doesn't match requested host name "updates.jenkins-ci.org".
#To connect to updates.jenkins-ci.org insecurely, use '--no-check-certificate'.
# also...
# don't check if it exists, because the old version may exist.
if [ -f /etc/init.d/jenkins ]; then
  /etc/init.d/jenkins status
  jenkins_status=`echo $?`
else
  echo "the /etc/init.d/jenkins startup script is missing. Jenkins installation is incomplete."
  echo "apt-get remote jenkins to remove but keep configs if you make any config changes."
  echo "apt-get purge jenkins to remove everything including configs. And fix script."
  exit 1
fi

# Somewhere the default port from 8080 (haproxy uses it) to $JENKINS_PORT.
# in /etc/default/jenkins and /etc/init.d/jenkins
# /etc/default/jenkins:
sed -i "s/HTTP_PORT=8080/HTTP_PORT=${JENKINS_PORT}/g" /etc/default/jenkins
# /etc/init.d/jenkins:
sed -i "s/8080/${JENKINS_PORT}/g" /etc/init.d/jenkins

# return 0 is running. return 3 is not running.
echo "Restarting Jenkins with non-default port of 
/etc/init.d/jenkins restart
sleep 10

#Jenkins Continuous Integration Server is running with the pid #####
# TODO: if jenkins-cli.jar does not exist, get it.
if [ ! -f /usr/share/jenkins/jenkins-cli.jar ]; then
  if [[ "$jenkins_status" -ne "0" ]]; then
    echo "Jenkins is not running. Starting up Jenkins."
    /etc/init.d/jenkins start
    /etc/init.d/jenkins status
    jenkins_status=`echo $?`
    if [[ "$jenkins_status" -ne "0" ]]; then
      echo "Jenkins will not start up. Exiting..."
      exit 1
    fi
  wget -O /usr/share/jenkins/jenkins-cli.jar http://localhost:${JENKINS_PORT}/jnlpJars/jenkins-cli.jar
  success=`echo $?`
fi

jenkins_version=`java -jar /usr/share/jenkins/jenkins-cli.jar -s http://localhost:${JENKINS_PORT}/cli version`
echo "If it just displayed \"Failed to authenticate with your SSH keys.\", please ignore."
#move currently installed/running Jenkins aside.
if [ $jenkins_version -gt 0 ]; then
  if [ ! -f /usr/share/jenkins/jenkins.war.v$jenkins_version ]; then
    wget -O jenkins.war.newest --no-check-certificate https://updates.jenkins-ci.org/latest/jenkins.war
    /etc/init.d/jenkins stop
    mv /usr/share/jenkins/jenkins.war /usr/share/jenkins/jenkins.war.v$jenkins_version
    mv /usr/share/jenkins/jenkins.war.newest /usr/share/jenkins/jenkins.war
    /etc/init.d/jenkins start
    sleep 10
    echo "Grabbing jenkins-cli.jar."
    wget -O /usr/share/jenkins/jenkins-cli.jar http://localhost:${JENKINS_PORT}/jnlpJars/jenkins-cli.jar
    exitok $? ____________downloaded_jenkins-cli.jar_______________
  fi
else
  rm -f /usr/share/jenkins/jenkins.war.v
  if [ $success -ne 0 ]; then 
    #file corrupt. get rid of it and get another.
    rm -f /usr/share/jenkins/jenkins-cli.jar
    wget -O /usr/share/jenkins/jenkins-cli.jar http://localhost:${JENKINS_PORT}/jnlpJars/jenkins-cli.jar
  fi
fi

cd ~/


# install for TestSwarm https://github.com/jquery/testswarm
# TODO: include a check here if mysql-server is already installed.
# TODO: If mysql-server is going to be installed, set unattended. It asks for mysql root passwd.
#   http://stackoverflow.com/questions/7739645/install-mysql-on-ubuntu-without-password-prompt
# TODO: install TestSwarm later.
#apt-get -y install mysql-server nginx php5
#if [ ! -d ~/testswarm ]; then
#  git clone https://github.com/jquery/testswarm.git
#  cp testswarm/config/nginx-sample.conf /etc/nginx/sites-available/nginx.conf
#fi


# The apt-get should have started up Jenkins.
# It takes some time for Jenkins to download the latest plugins
sleep 10
#java -jar /usr/share/jenkins/jenkins-cli.jar -s http://localhost:${JENKINS_PORT} version
#echo "If it just displayed \"Failed to authenticate with your SSH keys.\", please ignore."

# Update the Plugins
curl  -L http://updates.jenkins-ci.org/update-center.json | sed '1d;$d' | curl -X POST -H 'Accept: application/json' -d @- http://localhost:${JENKINS_PORT}/updateCenter/byId/default/postBack
#java -jar /usr/share/jenkins/jenkins-cli.jar -s http://localhost:${JENKINS_PORT} restart
sleep 20
java -jar /usr/share/jenkins/jenkins-cli.jar -s http://localhost:${JENKINS_PORT} install-plugin cvs subversion translation git github audit-trail createjobadvanced blame-upstream-commiters email-ext statusmonitor all-changes dry log-parser pmd violations ws-cleanup clamav ansicolor token-macro maven-plugin instant-messaging xcode-plugin skype-notifier growl ircbot greenballs simple-theme-plugin
echo "If it just displayed \"Failed to authenticate with your SSH keys.\", please ignore."
sleep 60
java -jar /usr/share/jenkins/jenkins-cli.jar -s http://localhost:${JENKINS_PORT} restart
echo "If it just displayed \"Failed to authenticate with your SSH keys.\", please ignore."
sleep 10

IPADDR=`/sbin/ifconfig | sed '/Bcast/!d' | awk '{print $2}'| awk '{print $2}' FS=":"`
echo "Now open your browser and look at http://${IPADDR}:${JENKINS_PORT}"
